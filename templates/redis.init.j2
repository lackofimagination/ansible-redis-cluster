#!/bin/sh

### BEGIN INIT INFO
# Provides: redis_{{ redis_port }}
# Default-Start: 2 3 4 5
# Default-Stop: 0 1 6
# Short-Description: Redis data structure server
# Description: Redis data structure server. See https://redis.io
### END INIT INFO

. /lib/lsb/init-functions

REDISPORT={{ redis_port }}
NAME=redis-${REDISPORT}
EXEC={{ redis_install_dir }}/bin/redis-server
CLIEXEC="{{ redis_install_dir }}/bin/redis-cli -p ${REDISPORT}"
PIDFILE={{ redis_pidfile }}
CONF={{ redis_conf_path }}
REDISUSER={{ redis_user }}

if [ -r /etc/default/redis_${REDISPORT} ]; then
  . /etc/default/redis_${REDISPORT}
fi

if [ -n "$REQUIREPASS" ]; then
  CLIEXEC="${CLIEXEC} -a ${REQUIREPASS}"
fi

if [ -n "$BINDADDRESS" ]; then
  CLIEXEC="${CLIEXEC} -h ${BINDADDRESS}"
fi

case "$1" in
  start)
    if [ -f $PIDFILE ]
    then
      status_of_proc -p "$PIDFILE" $EXEC "$NAME process" && return 0
    else
      log_daemon_msg "Starting Redis server..."
      if start-stop-daemon --start -q --oknodo -p "$PIDFILE" -c $REDISUSER --exec $EXEC -- $CONF
      then
        log_end_msg 0
      else
        log_end_msg 1
      fi
    fi
    ;;
  stop)
    if [ ! -f $PIDFILE ]
    then
      log_daemon_msg "$PIDFILE does not exist, process is not running"
      log_end_msg 0
    else
      PID=$(cat $PIDFILE)
      log_daemon_msg "Stopping..."
      $CLIEXEC -p $REDISPORT shutdown
      while [ -x /proc/${PID} ]
      do
        log_daemon_msg "Waiting for Redis to shutdown..."
        sleep 1
      done
      log_daemon_msg "Redis stopped"
      log_end_msg 0
    fi
    ;;
  status)
    status_of_proc -p "$PIDFILE" $EXEC "$NAME" && exit 0 || exit $?
    ;;
  restart|force-reload)
    ${0} stop
    ${0} start
    ;;
  *)
    echo "Usage: /etc/init.d/$NAME {start|stop|status|restart|force-reload}" >&2
    exit 1
    ;;
esac
